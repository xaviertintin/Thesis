The REANA system has been installed!

If you are upgrading from a previous REANA release series, you may need to
upgrade database schema now:

   $ kubectl -n {{ .Release.Namespace }} exec -i -t deployment/{{ .Release.Name }}-server -c rest-api -- reana-db alembic upgrade

Please see the dedicated upgrade documentation at
<https://docs.reana.io/administration/deployment/upgrading-db/>

If you are deploying REANA for the first time, there are a few steps left to
finalise its configuration.

1. Initialise the database:

    $ kubectl -n {{ .Release.Namespace }} exec deployment/{{ .Release.Name }}-server -c rest-api -- \
        ./scripts/create-database.sh

2. Create administrator user and corresponding access token:

    $ mytoken=$(kubectl -n {{ .Release.Namespace }} exec deployment/{{ .Release.Name }}-server -c rest-api -- \
          flask reana-admin create-admin-user --email john.doe@example.org \
                                              --password mysecretpassword)

3. Store administrator access token as Kubernetes secret:

    $ kubectl -n {{ .Release.Namespace }} create secret generic {{ .Release.Name }}-admin-access-token \
        --from-literal=ADMIN_ACCESS_TOKEN="$mytoken"

4. Try to run your first REANA example:

    $ firefox https://{{ default "localhost:30443" .Values.reana_hostname }}

   Or, using command line:

    $ # install REANA client
    $ pip install --user reana-client
    $ # set environment variables for REANA client
    $ export REANA_SERVER_URL=https://{{ default "localhost:30443" .Values.reana_hostname }}
    $ export REANA_ACCESS_TOKEN="$mytoken"
    $ # test connection to the REANA cluster
    $ reana-client ping
    $ # clone and run a simple analysis example
    $ git clone https://github.com/reanahub/reana-demo-root6-roofit
    $ cd reana-demo-root6-roofit
    $ reana-client run -w demo

Thanks for flying REANA ðŸš€
