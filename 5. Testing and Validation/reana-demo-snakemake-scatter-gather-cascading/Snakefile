max_files_per_sample = 10
download_sleep = 0

def get_samples():
    "Return list of the samples."
    samples = []
    fd = open(f"inputs/samples.txt")
    samples = fd.read().splitlines()
    fd.close()
    return samples

rule all:
    input:
        "results/histograms_merged.root"

rule process_sample_ttbar_nominal_one_file:
    container:
        "docker://docker.io/library/ubuntu:20.04"
    resources:
        kubernetes_memory_limit="256Mi"
    output:
        "histograms/histograms_ttbar_nominal_{filename}"
    shell:
        "sleep {download_sleep} && mkdir -p $(dirname {output}) && echo papermill mynotebook.ipynb -s nominal -f {wildcards.filename} > {output}"

def get_file_paths(sample, max=max_files_per_sample):
    "Return list of at most MAX file paths for the given SAMPLE."
    import json
    import os
    filepaths = []
    fd = open(f"inputs/files_{sample}.txt")
    filepaths = fd.read().splitlines()
    fd.close()
    return [f"histograms/histograms_{sample}_"+filepath[7:] for filepath in filepaths][:max]

rule process_sample_ttbar_nominal:
    container:
        "docker://docker.io/library/ubuntu:20.04"
    resources:
        kubernetes_memory_limit="256Mi"
    input:
        expand(get_file_paths("ttbar_nominal"))
    output:
        "histograms/histograms_ttbar_nominal.root"
    shell:
        "mkdir -p histograms && cat {input} > {output}"

rule process_sample_ttbar_ps_one_file:
    container:
        "docker://docker.io/library/ubuntu:20.04"
    resources:
        kubernetes_memory_limit="256Mi"
    output:
        "histograms/histograms_ttbar_ps_{filename}"
    shell:
        "sleep {download_sleep} && mkdir -p $(dirname {output}) && echo papermill mynotebook.ipynb -s ps -f {wildcards.filename} > {output}"

rule process_sample_ttbar_ps:
    container:
        "docker://docker.io/library/ubuntu:20.04"
    resources:
        kubernetes_memory_limit="256Mi"
    input:
        expand(get_file_paths("ttbar_ps"))
    output:
        "histograms/histograms_ttbar_ps.root"
    shell:
        "mkdir -p histograms && cat {input} > {output}"

rule process_sample_ttbar_another_one_file:
    container:
        "docker://docker.io/library/ubuntu:20.04"
    resources:
        kubernetes_memory_limit="256Mi"
    output:
        "histograms/histograms_ttbar_another_{filename}"
    shell:
        "sleep {download_sleep} && mkdir -p $(dirname {output}) && echo papermill mynotebook.ipynb -s nominal -f {wildcards.filename} > {output}"

rule process_sample_ttbar_another:
    container:
        "docker://docker.io/library/ubuntu:20.04"
    resources:
        kubernetes_memory_limit="256Mi"
    input:
        expand(get_file_paths("ttbar_another"))
    output:
        "histograms/histograms_ttbar_another.root"
    shell:
        "mkdir -p histograms && cat {input} > {output}"

rule merge_histograms:
    container:
        "docker://docker.io/library/ubuntu:20.04"
    resources:
        kubernetes_memory_limit="256Mi"
    input:
        expand("histograms/histograms_ttbar_another.root")
    output:
        "results/histograms_merged.root"
    shell:
        "mkdir -p results && cat {input} > {output}"
